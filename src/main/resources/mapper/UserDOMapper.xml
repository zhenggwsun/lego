<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangweinan.dao.UserDOMapper">
  <resultMap id="BaseResultMap" type="com.zhangweinan.dao.objects.UserDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lego_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhangweinan.dao.objects.UserDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select last_insert_id()
    </selectKey>
    insert into lego_user (gmt_create, gmt_modify, username, 
      password, type, display_name
      )
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{displayName,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhangweinan.dao.objects.UserDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lego_user
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      display_name = #{displayName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gmt_create, gmt_modify, username, password, type, display_name
    from lego_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gmt_create, gmt_modify, username, password, type, display_name
    from lego_user
  </select>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, username, password, type, display_name
    from lego_user where username = #{username,jdbcType=VARCHAR} AND `type` = #{type,jdbcType=VARCHAR}
  </select>

  <select id="selectByPage" resultType="com.zhangweinan.model.model.UserModel">
    select a.id as userId, a.gmt_create as gmtCreate, a.username as username, a.password as password, a.type as `type`, a.display_name as displayName,
    b.id as userInfoId, b.real_name as realName, b.sex as sex, b.age as age, b.tel as tel, b.address as address
    from lego_user a INNER JOIN lego_user_info b ON a.id = b.user_id
    where 1=1
    <if test="username != null and username != ''">
      and a.username = #{username,jdbcType=VARCHAR}
    </if>
     AND `type` = 'USER'
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(1)
    from lego_user a INNER JOIN lego_user_info b ON a.id = b.user_id
    where 1=1
    <if test="username != null and username != ''">
      and a.username = #{username,jdbcType=VARCHAR}
    </if>
    AND `type` = 'USER'
  </select>

  <select id="selectList" resultType="com.zhangweinan.model.model.UserExportModel">
    select a.id as id, a.gmt_create as gmtCreate, a.username as username, a.display_name as displayName,
    b.real_name as realName, b.sex as sex, b.age as age, b.tel as tel, b.address as address
    from lego_user a INNER JOIN lego_user_info b ON a.id = b.user_id
    where`type` = 'USER'
  </select>




</mapper>