<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangweinan.dao.ProductDOMapper">
  <resultMap id="BaseResultMap" type="com.zhangweinan.dao.objects.ProductDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="product_desc" jdbcType="VARCHAR" property="productDesc" />
    <result column="categroy" jdbcType="VARCHAR" property="categroy" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from lego_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhangweinan.dao.objects.ProductDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select last_insert_id()
    </selectKey>
    insert into lego_product (gmt_create, gmt_modify, product_name, 
      price, photo, product_desc, 
      categroy)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, #{productName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{photo,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, 
      #{categroy,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhangweinan.dao.objects.ProductDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update lego_product
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      product_name = #{productName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      photo = #{photo,jdbcType=VARCHAR},
      product_desc = #{productDesc,jdbcType=VARCHAR},
      categroy = #{categroy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product
  </select>

  <select id="selectNewTen" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product ORDER BY gmt_create DESC limit 10
  </select>

  <select id="selectSellMostTen" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product where id IN (SELECT product_id from (select product_id, sum(`sold_count`) from lego_product_repertory group by product_id order by sum(`sold_count`) DESC limit 10)x)
  </select>

  <select id="selectSellMostTenInMonth" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product where id IN (SELECT product_id from (select product_id, sum(`number`) from lego_order group by product_id order by sum(`number`) DESC limit 10)x)
  </select>

  <select id="selectProductList" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product WHERE 1=1
    <if test="type != null and type != ''">
      and categroy = #{type,jdbcType=VARCHAR}
    </if>
     limit #{from}, #{pageSize}
  </select>

  <select id="selectProductListCount" resultType="java.lang.Integer">
    select count(1)
    from lego_product WHERE 1=1
    <if test="type != null and type != ''">
      and categroy = #{type,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="selectNewProductList" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product ORDER BY gmt_create DESC limit #{from}, #{pageSize}
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(1) from lego_product
  </select>

  <select id="selectByKey" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, product_name, price, photo, product_desc, categroy
    from lego_product WHERE 1=1
    <if test="key != null and key != ''">
      and product_name LIKE CONCAT(CONCAT('%',#{key},'%')) OR categroy LIKE CONCAT(CONCAT('%',#{key},'%'))
    </if>
    limit #{from}, #{pageSize}
  </select>

  <select id="selectByKeyCount" resultType="java.lang.Integer">
    select count(1)
    from lego_product WHERE 1=1
    <if test="key != null and key != ''">
      and product_name LIKE CONCAT(CONCAT('%',#{key},'%')) OR categroy LIKE CONCAT(CONCAT('%',#{key},'%'))
    </if>
  </select>


</mapper>